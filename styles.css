/* Подключаем шрифты */
@font-face {
    font-family: 'Heebo';
    src: url("./fonts/Heebo-Light.woff2") format('woff2');
    font-weight: 300;
    font-style: normal;

    /* font-display: swap; - оно говорит браузеру сначала показать текст с запасным (системным) шрифтом,
     а как только нужный веб-шрифт догрузится — заменить его на правильный. */
    font-display: swap;
}

@font-face {
    font-family: 'Heebo';
    src: url("./fonts/Heebo-Bold.woff2") format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Yantramanav';
    src: url("./fonts/Yantramanav-Bold.woff2") format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}


/* Создаем переменные */
:root {
    --color-dark: #000000;
    --color-light: #FFFFFF;
    --color-dark-gray: #404040;
    --color-light-gray: #C4C4C4;
    --color-dark-alternate: #131619;

    --border-radius: 30px;
    --border: 1px solid var(--color-light);

    /* sans-serif - фоллбэк, запасной шрифт, если указанный шрифт не подгрузится */
    --font-family-base: 'Heebo', sans-serif;
    --font-family-accent: 'Yantramanav', sans-serif;

    --input-height: 54px;
    --container-width: 1300px;

    /* Переменная для горизонтальных внутренних отступов, чтобы при уменьшении ширины экрана контент не слипался с краями */
    --container-padding-x: 15px;

    --transition-duration: 0.2s;

    --header-height: 90px;
}

body {
    font-family: var(--font-family-base), sans-serif;
    background-color: var(--color-dark);

    /* Зафиксируем цвет размер и начертание основного (часто-встречающегося) шрифта */
    color: var(--color-light-gray);
    font-weight: 300;
    font-size: 16px;
    line-height: 1.75;
}

a,
button,
input,
textarea,
svg * {
    /* svg * - все дочение элементы внутри svg */
    transition-duration: var(--transition-duration);
}

a {
    color: var(--color-light);
}

a:hover {
    color: var(--color-light-gray);
}

p {
    margin-block: 0;
}

/* Выбирает все теги параграфа которые не являются последними среди своих соседних лежащих на одном уровне элементов */
/* А так же не имеют класса */
p:not([class]):not(:last-child) {
    margin-bottom: 24px;
}

.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    white-space: nowrap;
    clip-path: inset(100%);
    clip: rect(0 0 0 0);
    overflow: hidden;
}

.container {
    /* Максимальная ширина контейнера равна ширине контента плюс суммарные горизонтальные отступы слева и справа */
    /* Получим реальное ограничение ширины сетки в 1300px */
    max-width: calc(var(--container-width) + var(--container-padding-x) * 2);

    /* margin-inline и padding-inline нужны для того, чтобы задавать отступы слева и справа (по горизонтали) в
    логическом направлении письма — то есть так, чтобы код автоматически подстраивался под разные языки и направления текста. */
    margin-inline: auto;
    padding-inline: var(--container-padding-x);
}

.container-wide {
    max-width: 1920px;
    margin-inline: auto;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
    text-transform: uppercase;
    color: var(--color-light);
}

.title-medium {
    font-size: clamp(20px, 2.08vw, 40px);
    line-height: 1.3;
}

.title-big {
    font-size: clamp(24px, 3.12vw, 60px);
}

.backdrop-title {
    position: relative;
    z-index: 2;
}

.backdrop-title::before {
    content: '';
    display: block;
    position: absolute;
    /* Отступи от правого края родителя на величину равную ширине самого элемента (100%) плюс ещё 8px. */
    right: calc(100% + 8px);
    width: 26px;
    aspect-ratio: 1;
    background: url("./icons/plus.svg") center/contain no-repeat;
}

.backdrop-title::after {
    /* Получаем значение из разметки в указанном дата атрибуте */
    content: attr(data-title);
    position: absolute;
    z-index: -1;
    top: -0.3em;
    left: -0.6em;
    font-family: var(--font-family-accent), 'sans-serif';
    color: transparent;
    /* Добавляем обводку тексту. Обязателен вендорный преффикс webkit */
    -webkit-text-stroke: 1px var(--color-light-gray);
    text-stroke: 1px var(--color-light-gray);
    /* У основного текста размер 40 пикселей. Воспользуемся единицами em для того чтобы размер фонового теста
    считался относительно размера текста родителя. 112 (текст по макету) / 40 (размер родителя) = 2.8 */
    font-size: 2.8em;
    line-height: 1;
}

.backdrop-title.centered::after {
    top: -0.25em;
    left: 50%;
    translate: -50% 0;
}

.section-description {
    font-size: 20px;
    line-height: 1.65;
    text-transform: uppercase;
    color: var(--color-light);
    text-align: center;
}

.button {
    display: inline-flex;
    align-items: center;
    padding-inline: 26px;
    height: 38px;
    text-decoration: none;
    font-size: 12px;
    font-weight: 700;
    line-height: 2;
    letter-spacing: 1.2px;
    text-transform: uppercase;
    background-color: var(--color-light);
    border: none;
    border-radius: var(--border-radius);
    white-space: nowrap;
}

.button:hover {
    background-color: var(--color-light-gray);
    transition-duration: var(--transition-duration);
}

.button.transparent {
    position: relative;
    height: var(--input-height);
    padding-left: 31px;
    padding-right: 80px;
    background-color: transparent;
    border: var(--border);
    color: var(--color-light);
}

.button.transparent::after {
    content: '';
    position: absolute;
    right: 0;
    height: 100%;
    aspect-ratio: 1;
    background: url("./icons/arrow-top-right.svg") center/70% no-repeat;
    border: var(--border);
    border-radius: 50%;
}

.button.transparent:hover {
    color: var(--color-dark);
    background-color: var(--color-light-gray);
    transition-duration: var(--transition-duration);
}

.input {
    height: var(--input-height);
    padding-inline: 25px;
    width: 100%;
    background: transparent;
    border: 1px solid var(--color-light-gray);
    border-radius: var(--border-radius);
    color: var(--color-light);
}

.input::placeholder {
    color: var(--color-light-gray);
}

.input:hover {
    border-color: var(--color-light);
}

.input:focus {
    color: var(--color-dark);
    background-color: var(--color-light-gray);
    outline: none;
}

/* Хедер */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    min-height: var(--header-height);
    padding-inline: 32px;
    /* Для того чтобы элементы не слипались при сжатии экрана */
    column-gap: 20px;
    background-color: var(--color-dark-alternate);
}

.header-logo {
    flex-shrink: 0;
}

.header-menu-list {
    display: flex;
    flex-wrap: wrap;
    column-gap: 50px;
}

.header-menu-link {
    /* Увеличим область нажатия по ссылке. Поскольку ссылка inline элемент нам нужно сделать: */
    display: inline-flex;
    align-items: center;
    column-gap: 7px;
    height: var(--header-height);

    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 12px;
    letter-spacing: 1.2px;
}

/* header-menu-link содержащий is-current */
.header-menu-link.is-current::after {
    content: "";
    width: 5px;
    /* Если ширина и высота элемента одинаковы мы можем прописать это свойство. Оно делает пропорции один к одному */
    aspect-ratio: 1;
    /* Ссылается на значение в свойстве color, оно наследуется */
    background-color: currentColor;
    border-radius: 50px;
}

.header-actions {
    display: flex;
    column-gap: 40px;
}

.header-burger-button {
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
    row-gap: 4px;
    width: 40px;
    aspect-ratio: 1;
    padding-left: 8px;
    background-color: transparent;
    border: var(--border);
    border-radius: 50%;
    color: var(--color-light);
}

.header-burger-button:hover {
    color: var(--color-light-gray);
    /* Почему тут курент колор серый? */
    border-color: currentColor;
}

.header-burger-button-line {
    width: 6px;
    height: 1px;
    background-color: currentColor;
    box-shadow: 16px 0 0 currentColor;
}


/* Слайдер */
.banner {
    display: flex;
    flex-direction: column;
    justify-content: end;
    /* 100% высоты минус высота шапки */
    min-height: calc(100vh - var(--header-height));
    padding: 36px 70px;
    color: var(--color-light);
    background-color: var(--color-dark-alternate);
}

.banner-body {
    text-transform: uppercase;
}

.banner-info {
    /*
        Если не задать флекс, то псевдоэлемент не будет отображаться.
        Потому что потреяет свойство width.
        Псеводоэлемент по умолчанию является строчным.
    */
    display: flex;
    align-items: end;
    /* 3 значения: минимальное, рекомендуемое, максимальное */
    font-size: clamp(16px, 1.56vw, 30px);
    line-height: 1.27;
    font-weight: 700;
}

.banner-info::before {
    content: '';
    width: clamp(60px, 10.1vw, 194px);
    aspect-ratio: 1;
    margin-right: 30px;
    background: url('./icons/bold-arrow-down-right.svg') center/contain no-repeat;
}

.banner-title {
    /* font-size: 360px; */
    /* Меняем пиксели на вьюпорт единицы. */
    /* 360 / 1920 (ширина макета) * 100 = 18.75 */
    /* Чтобы на больших экранах текст не был больше 360 пикселей используем min. Браузер среди них будет выбирать наименьшее. */
    font-size: min(18.75vw, 360px);
    line-height: 1;
}

.banner-pagination-list {
    display: flex;
    justify-content: center;
}

.banner-pagination-item {
    /* По умолчанию браузер задает им высоту line height, и display: list-item*/
    /* Чтобы высота элементов соответствовала высоте содержимого поменяем display на flex */
    display: flex;
}

.banner-pagination-button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 7px;
    background-color: transparent;
    border: none;
}

/* Увеличим область нажатия на кнопки пагинации, для этого отрисуем кружок через афтер */
.banner-pagination-button::after {
    content: '';
    width: 10px;
    aspect-ratio: 1;
    border: var(--border);
    border-radius: 50%;
}

.banner-pagination-button.is-current::after {
    background-color: var(--color-light);
}

/*
    Обращаемся ко всем кнопкам у которых нет класса is-current т.к. эффект наведения должен отрабатывать только на
    неактивных кнопках. Затем указываем ховер и в конце обращаемся к нашему псевдоэлементу кружку.
*/
.banner-pagination-button:not(.is-current):hover::after {
    border-color: var(--color-light-gray);
    transition-duration: var(--transition-duration);
}


/* Мотивация */
/* Только четные элементы будут иметь фон другого цвета */
.motivation-item:nth-child(even) {
    background-color: var(--color-dark-alternate);
}

/* Обратимся к motivation-card лежащим в четных элементах motivation-item */
.motivation-item:nth-child(even) .motivation-card {
    flex-direction: row-reverse;
}

.motivation-card {
    display: flex;
    justify-content: start;
    align-items: center;
    column-gap: clamp(30px, 10.42vw, 200px);
}

.motivation-card-image {
    /* margin-block: -60px; означает, что элемент получает отрицательный внешний отступ как в начале,
     так и в конце блока (по логическому направлению письма). */
    margin-block: -60px;
}

.motivation-card-body {
    padding-left: 35px;
}

/* Свойство применяется к тем элементам которые не являются последними */
.motivation-card-title:not(:last-child) {
    margin-bottom: 14px;
}

.motivation-card-description {
    max-width: 400px;
}

.motivation-card-description:not(:last-child) {
    margin-bottom: 37px;
}


/* Training types */
.training-types {
    /* Чтобы картинка не наезжала задаем position relative и цвет фона */
    position: relative;
    background-color: var(--color-dark);
    padding-top: 70px;
    padding-bottom: 120px;
}

.training-types-list {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: 60px;
}

.training-types-item {
    /* Создаем перменную чтобы было удобнее при адаптиве */
    --trainingTypesItemBgIconSIze: 80px;

    display: flex;
    align-items: center;
    flex-direction: column;
    row-gap: 32px;
    padding-top: var(--trainingTypesItemBgIconSIze);
    background: url('./icons/transparent-arrow-bottom-left.svg') 100% 0/var(--trainingTypesItemBgIconSIze) no-repeat;
}

.training-types-item-title {
    font-size: 16px;
}


/* Join us */
.join-us {
    background-color: var(--color-dark-alternate);
}

.join-us-video-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    background: url('./images/join-us-bg.jpg') center/cover no-repeat var(--color-dark-alternate);
    padding: 150px 30px;
}

.join-us-video {
    width: 100%;
    max-width: 960px;
    height: auto;
}

.join-us-video-play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 200px;
    aspect-ratio: 1;
    background-color: transparent;
    border-radius: 50%;
    border: var(--border);
    font-size: 14px;
    font-weight: 700;
    text-transform: uppercase;
    color: var(--color-light);
    column-gap: 4px;
}

.join-us-video-play-button::after {
    content: '';
    width: 26px;
    aspect-ratio: 1;
    background: url('./icons/arrow-top-right.svg') center/contain no-repeat;
    transition-duration: var(--transition-duration);
}

.join-us-video-play-button:hover {
    color: var(--color-dark);
    background-color: var(--color-light-gray);
}

.join-us-video-play-button:hover::after {
    /* Перекрашивает svg в черный */
    filter: invert(1);
}

.join-us-body {
    padding-bottom: 150px;
}

.join-us-title {
    position: relative;
    font-size: clamp(64px, 9.37vw, 180px);
    line-height: 1;
    text-align: center;
    margin-top: -0.4em;
}

.join-us-title::after {
    content: '';
    display: inline-block;
    height: 0.7em;
    aspect-ratio: 1;
    background: url('./icons/bold-arrow-down-right.svg') center/contain no-repeat;
    scale: 1 -1;
    margin-left: 0.14em;
}

.join-us-title:not(:last-child) {
    margin-bottom: 130px;
}

.join-us-form-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    row-gap: 7px;
}

.join-us-form-header:not(:last-child) {
    margin-bottom: 52px;
}

.join-us-form-body {
    display: flex;
    justify-content: center;
    column-gap: 20px;
}

.join-us-from-input {
    max-width: 400px;
}


/* Location */
.location {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
}

.location-map-image {
    height: auto;
    width: 100%;
}

.location-body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 80px 15px;
    text-align: center;
}

.location-title:not(:last-child) {
    margin-bottom: 14px;
}

.location-description {
    max-width: 490px;
}

.location-description:not(:last-child) {
    margin-bottom: 37px;
}


/* Family */
.family {
    background-color: var(--color-dark-alternate);
}

.family-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    row-gap: 7px;
    text-align: center;
    padding-top: 132px;
    padding-bottom: 62px;
}

.family-body {
    display: flex;
    justify-content: center;
    column-gap: 26px;
    scroll-snap-type: mandatory;
    overflow-x: scroll;
}

.family-image {
    scroll-snap-align: start;
    width: 100%;
    height: auto;
}

/* Адаптив */
@media (max-width: 1919px) {
    .motivation-card-image {
        margin-block: -20px;
    }
}

@media (max-width: 1280px) {
    .training-types-list {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (max-width: 1024px) {
    .header {
        /* Чтобы во флекс контейнере внутренние элементы могли пребрасываться на новые строки */
        flex-wrap: wrap;
        padding-top: 20px;
        row-gap: 10px;
    }

    .header,
    .banner {
        padding-inline: 15px;
    }

   .header-menu {
       /* Для того чтобы элемент встал в самый конец */
       order: 1;
       /*
           flex-basis: 100%; задаёт исходный размер flex-элемента вдоль главной оси (main axis) —
           до того, как применяются flex-grow или flex-shrink.
           Если у контейнера display: flex с направлением по горизонтали (flex-direction: row), то
           flex-basis: 100% означает, что элемент будет занимать всю ширину контейнера.
        */
       flex-basis: 100%;
   }

   .header-menu-link {
       height: 50px;
   }

    .banner {
        row-gap: 10px;
    }

    .motivation-card {
        padding-block: 50px;
    }

    .motivation-card-image {
        max-width: 30%;
        height: auto;
        margin-block: 0;
    }

    .join-us-body {
        padding-bottom: 80px;
    }

    .join-us-title:not(:last-child) {
        margin-bottom: 80px;
    }

    .location {
        display: flex;
        flex-direction: column-reverse;
    }

    .family-image {
        height: 360px;
    }
}

@media (max-width: 767px) {
    .button {
        padding-inline: 18px;
    }

    .header {
        padding-top: 10px;
    }

    .header-menu-list {
        column-gap: 24px;
    }

    .header-menu-link {
        height: 32px;
    }

    .header-actions {
        column-gap: 15px;
    }

    .banner-info {
        margin-bottom: 5px;
    }

    .banner-info::before {
        margin-right: 10px;
    }

    .motivation-card,
    .motivation-item:nth-child(even) .motivation-card {
        flex-direction: column-reverse;
    }

    .motivation-card {
        padding-block: 30px;
        row-gap: 30px;
    }

    .motivation-card-image {
        max-width: 60%;
        height: auto;
    }

    .motivation-card-description:not(:last-child) {
        margin-bottom: 20px;
    }

    .training-types-list {
        grid-template-columns: repeat(2, 1fr);
        gap: 30px;
    }

    .training-types-item {
        --trainingTypesItemBgIconSIze: 50px;
        row-gap: 10px;
    }

    .training-types-image {
        max-width: 120px;
    }

    .join-us-video-play-button {
        width: 140px;
        aspect-ratio: 1;
    }

    .join-us-title:not(:last-child) {
        margin-bottom: 40px;
    }

    .section-description {
        font-size: 16px;
    }

    .join-us-form-body {
        flex-direction: column;
        align-items: center;
        row-gap: 20px;
    }

    .location-body {
        padding-block: 40px;
    }

    .location-description:not(:last-child) {
        margin-bottom: 20px;
    }

    .family-header {
        padding-top: 80px;
        padding-bottom: 50px;
    }

    .family-body {
        column-gap: 12px;
    }

    .family-image {
        height: 180px;
    }
}

/*
    1. Почитать про before after.
    2. Почитать про свойство background.
    3. Почитать про блочные и инлайн элементы.
    4. Повторить флексы.
    5. Сложные css селекторы.
    6. Динамические единицы измерения
    7. margin block с отрицательным значением, как я выравнивал картинки
*/
















